module docstring:
         >>> m = __import__("1-my_list").__doc__
         >>> len(m) > 1
         True

class docstring:
         >>> c = __import__("1-my_list").MyList.__doc__
         >>> len(c) > 1
         True

 method docstring:
	  >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	  >>> len(mod) > 1
	  True

MyList inherits from list:
	  >>> issubclass(MyList, list)
	  True

 empty list:
	  >>> l = MyList()
	  >>> l.print_sorted()
	  []

that appendng works:
	  >>> l.append(1)
	  >>> l.append(2)
	  >>> l.append(3)
	  >>> print(l)
	  [1, 2, 3]

list already in correct order:
	  >>> l.print_sorted()
	  [1, 2, 3, 4]

reversed order list:
	  >>> l = MyList()
	  >>> l.append(4)
	  >>> l.append(3)
	  >>> l.append(2)
	  >>> l.append(1)
	  >>> print(l)
	  [4, 3, 2, 1]
	  >>> l.print_sorted()
	  [1, 2, 3, 4]
	  >>> print(l)
	  [4, 3, 2, 1]

negative numbers:
	  >>> l = MyList()
	  >>> l.append(-10)
	  >>> l.append(-1)
	  >>> l.append(-7)
	  >>> l.append(-2)
	  >>> l.append(-9)
	  >>> print(l)
	  [-10, -1, -7, -2, -9]
	  >>> l.print_sorted()
	  [-10, -9, -7, -2, -1]
	  >>> print(l)
          [-10, -1, -7, -2, -9]

too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  ...
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
